{"version":3,"sources":["SearchInput.js","Table.js","Search.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","display","alignItems","width","maxWidth","input","marginLeft","spacing","flex","iconButton","divider","height","margin","SearchInput","value","onChange","onSearch","onMenu","onGraph","classes","Paper","component","className","onSubmit","event","preventDefault","IconButton","aria-label","onClick","InputBase","placeholder","inputProps","type","Divider","orientation","color","Table","dataArray","data","columns","Array","isArray","Object","values","title","detailPanel","tooltip","render","rowData","style","abstract","actions","icon","hidden","undefined","url","window","open","onRowClick","togglePanel","options","filtering","grouping","exportButton","flexDirection","button","marginTop","loading","Search","content","React","useState","setInput","status","query","setQuery","timerRef","useRef","handleSearchMockup","clearTimeout","current","setTimeout","mockupData","papers","field","cellStyle","fontWeight","lookup","en","de","fr","Fade","in","transitionDelay","unmountOnExit","CircularProgress","console","debug","message","target","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.94c8222c.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '96%',\n    maxWidth: 1000,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\nconst SearchInput = ({ value = '', onChange, onSearch, onMenu, onGraph }) => {\n  const classes = useStyles();\n\n  // console.log('render')\n\n  // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\n  // const [cValue, setCValue] = React.useState('');\n  // const handleChange = (event) => {\n  //   onChange && onChange(event);\n  //   value === undefined && setCValue(event.target.value);\n  // };\n  // console.log('value=', value,',', cValue);\n  // value === undefined || cValue === value || setCValue(value); // does it cause 2 renders for the 1st render?\n  // const [test, setTest] = React.useState(Math.random());\n  // const handleTest = () => setTest(test + 1)\n  // console.log('test=', test);\n\n  return (\n    <Paper\n      component=\"form\"\n      className={classes.root}\n      onSubmit={event => { onSearch && onSearch(event); event.preventDefault(); }}\n    >\n      <IconButton\n        className={classes.iconButton}\n        aria-label=\"menu\"\n        onClick={onMenu}\n      >\n        <MenuIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder=\"What are you looking for?\"\n        inputProps={{ 'aria-label': 'search papers' }}\n        value={value}\n        onChange={onChange}\n      />\n      <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} orientation=\"vertical\" />\n      <IconButton\n        color=\"primary\"\n        className={classes.iconButton}\n        aria-label=\"graph\"\n        onClick={onGraph}\n      >\n        <BubbleChartIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n\nexport default SearchInput;\n","import React from 'react'\nimport MaterialTable from 'material-table'\n\n//\n// TODO:\n// Filter by range https://github.com/mbrn/material-table/pull/1351\n//\n\nconst Table = ({ data, columns }) => {\n  let dataArray;\n  if (Array.isArray(data)) dataArray = data;\n  else if (typeof data === 'object' && data !== null) dataArray = Object.values(data);\n  else dataArray = [];\n  \n  return (\n    <MaterialTable\n      title=\"I found these papers for you:\"\n      columns={columns}\n      data={dataArray}\n      detailPanel={[\n        {\n          tooltip: 'Show Abstract',\n          render: rowData => {\n            return (\n              <div style={{ padding: '8px 16px' }}>\n                {rowData.abstract}\n              </div>\n            )\n          },\n        },\n      ]}\n      actions={[\n        {\n          icon: 'favorite_border',\n          tooltip: 'Add to collection',\n          onClick: (event, rowData) => {\n            // Do save operation\n          }\n        },\n        rowData => ({\n          icon: 'open_in_new',\n          tooltip: 'Open',\n          hidden: rowData.url === undefined,\n          onClick: (event, rowData) => {\n            window.open(rowData.url);\n          }\n        }),\n      ]}\n      onRowClick={(event, rowData, togglePanel) => togglePanel()}\n      options={{\n        filtering: true,\n        grouping: true,\n        exportButton: true\n      }}\n    />\n  )\n}\n\nexport default Table;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport SearchInput from './SearchInput';\nimport Table from './Table';\n\nimport mockupData from './mockup_data';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  button: {\n    margin: theme.spacing(2),\n  },\n  placeholder: {\n    marginTop: 20,\n    width: 'calc(96% + 8px)',\n  },\n  loading: {\n    marginTop: 200,\n  },\n}));\n\nconst Search = () => {\n  const classes = useStyles();\n  const [input, setInput] = React.useState(''); // default input\n  const [query, setQuery] = React.useState({ status: 'idle' });\n  const timerRef = React.useRef();\n\n  // Seems to be wrong code\n  // React.useEffect(\n  //   () => () => {\n  //     clearTimeout(timerRef.current);\n  //   },\n  //   [],\n  // );\n\n  const handleChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  const handleSearch = (event) => {\n    if (process.env.REACT_APP_MOCKUP_DATA === 'true') return handleSearchMockup(event);\n\n    setQuery({ status: 'progress' });\n\n    const url = new URL(process.env.REACT_APP_BACKEND || 'http://localhost:8000/papers');\n    url.search = new URLSearchParams({ 'q': input });\n\n    fetch(url,\n      {\n        headers: new Headers({\n          'Authorization': 'ZHANG',\n          'Account-ID': 'bin'\n        })\n      }\n    )\n      .then(res => res.json())\n      .then(\n        (result) => {\n          if (result.papers) setQuery({ status: 'success', data: result });\n          else setQuery({ status: 'error', data: { message: '' } });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setQuery({ status: 'error', data: error });\n        }\n      )\n  };\n\n  const handleSearchMockup = (event) => {\n    clearTimeout(timerRef.current);\n\n    if (query.status !== 'idle') {\n      setQuery({ status: 'idle' });\n      return;\n    }\n\n    setQuery({ status: 'progress' });\n\n    timerRef.current = setTimeout(() => {\n      setQuery({ status: 'success', data: mockupData });\n    }, 1000);\n  };\n\n  const columns = [\n    {\n      title: 'Title',\n      field: 'title',\n      // customFilterAndSearch: (term, rowData) => term == rowData.name.length,\n      cellStyle: {\n        fontWeight: 'bold',\n      },\n    },\n    { title: 'Score', field: 'score', type: 'numeric' },\n    { title: 'Date', field: 'date', type: 'date' },\n    {\n      title: 'Language',\n      field: 'language',\n      lookup: { en: 'English', de: 'German', fr: 'French' },\n    },\n    // { title: 'Year', field: 'year', type: 'numeric' },\n    // {\n    //   title: 'Country',\n    //   field: 'country',\n    //   lookup: { 1: 'Switzerland', 2: 'China', 3: 'Italy', 4: 'USA' },\n    // },\n  ];\n\n  let content;\n  switch (query.status) {\n    case 'success':\n      content = (\n        <Table data={query.data.papers} columns={columns} />\n      );\n      break;\n    case 'progress':\n      content = (\n        <Fade\n          in={query.status === 'progress'}\n          style={{\n            transitionDelay: query.status === 'progress' ? '500ms' : '0ms',\n          }}\n          unmountOnExit\n        >\n          <div>\n            <CircularProgress />\n            <div>loading</div>\n          </div>\n\n        </Fade>\n      );\n      break;\n    case 'error':\n      console.debug('Error', query.data);\n      content = (\n        <div>Error: {query.data.message}</div>\n      );\n      break;\n    default:\n\n  }\n\n  return (\n    <div className={classes.root}>\n      <SearchInput value={input} onChange={handleChange} onSearch={handleSearch} />\n      <div className={classes.placeholder}>\n        {content}\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport Search from './Search';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <h1>COVID-19 Papers</h1>\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}